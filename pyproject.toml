[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "MAPLE"
version = "0.1.0"
description = "MIT Autonomous Pathfinding for Lunar Exploration"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10, <3.11"
authors = [
    { name = "Annika Thomas", email = "annikat@mit.edu" },
    { name = "Aleksander Garbuz", email = "agarbuz@mit.edu" },
    { name = "Allison Eto", email = "allisone@mit.edu" },
    { name = "Cormac O'Neil", email = "croneill@mit.edu" },
    { name = "Dami Thomas", email = "dvthomas@mit.edu" },
    { name = "Jing Tan", email = "jingt630@mit.edu" },
    { name = "Luke Anger", email = "langer1@mit.edu.com" },
    { name = "Robaire Galliath", email = "robaire@mit.edu" },
    { name = "Trevor Jost", email = "trejohst@mit.edu" },
]
dependencies = [
    "fastsam; sys_platform != 'darwin' or platform_machine != 'x86_64'",
    "filterpy>=1.4.5",
    "numpy==1.21.4",
    "opencv-python==4.10.0.84",
    "pyapriltags>=3.3.0.3",
    "pytransform3d>=3.9.0",
    "scikit-learn>=1.6.1",
    "scipy>=1.10.0",
    "setuptools>=75.8.0",
    "shapely>=2.0.7",
    "torch==2.5.1; sys_platform != 'darwin' or platform_machine != 'x86_64'",
    "ultralytics==8.0.120; sys_platform != 'darwin' or platform_machine != 'x86_64'",
]

[tool.uv]
dev-dependencies = [
    "pre-commit>=4.0.1",
    "ruff>=0.7.4",
    "pytest>=8.3.3",
    "pyfakefs>=5.7.1",
    "sphinx>=8.1.3",
    "sphinx-autodoc-typehints>=2.5.0",
    "coverage[toml]>=7.6.7",
    "pytest-cov>=6.0.0",
    "pillow>=11.0.0",
    "pytest-mock>=3.14.0",
]

[tool.uv.workspace]
members = ["leaderboard"]

[tool.uv.sources]
fastsam = { git = "https://github.com/CASIA-IVA-Lab/FastSAM" }

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = [".", "./leaderboard"]
testpaths = ["test"]
addopts = ["--import-mode=importlib", "--cov", "--cov-report=term-missing"]
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources",
    "ignore::DeprecationWarning:ultralytics",
    "ignore::FutureWarning:ultralytics",
]

[tool.coverage]
run.branch = true
run.source = ["maple", "test"]
html.directory = "coverage"

[tool.ruff.lint.per-file-ignores]
"test/*" = ["F401", "F811"]

[tool.hatch.build.targets.sdist]
include = ["maple"]
artifacts = ["resources"]

[tool.hatch.build.targets.wheel]
include = ["maple"]
artifacts = ["resources"]
